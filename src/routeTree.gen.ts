/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as ForbiddenImport } from './routes/forbidden'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthMainImport } from './routes/_auth/main'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthCardsIndexImport } from './routes/_auth/cards/index'
import { Route as AuthCardsAddImport } from './routes/_auth/cards/add'
import { Route as AuthUsersUserIdEditImport } from './routes/_auth/users/$userId.edit'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForbiddenRoute = ForbiddenImport.update({
  path: '/forbidden',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthMainRoute = AuthMainImport.update({
  path: '/main',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCardsIndexRoute = AuthCardsIndexImport.update({
  path: '/cards/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCardsAddRoute = AuthCardsAddImport.update({
  path: '/cards/add',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersUserIdEditRoute = AuthUsersUserIdEditImport.update({
  path: '/users/$userId/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/forbidden': {
      id: '/forbidden'
      path: '/forbidden'
      fullPath: '/forbidden'
      preLoaderRoute: typeof ForbiddenImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/main': {
      id: '/_auth/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof AuthMainImport
      parentRoute: typeof AuthImport
    }
    '/_auth/cards/add': {
      id: '/_auth/cards/add'
      path: '/cards/add'
      fullPath: '/cards/add'
      preLoaderRoute: typeof AuthCardsAddImport
      parentRoute: typeof AuthImport
    }
    '/_auth/cards/': {
      id: '/_auth/cards/'
      path: '/cards'
      fullPath: '/cards'
      preLoaderRoute: typeof AuthCardsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$userId/edit': {
      id: '/_auth/users/$userId/edit'
      path: '/users/$userId/edit'
      fullPath: '/users/$userId/edit'
      preLoaderRoute: typeof AuthUsersUserIdEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthMainRoute,
    AuthCardsAddRoute,
    AuthCardsIndexRoute,
    AuthUsersIndexRoute,
    AuthUsersUserIdEditRoute,
  }),
  ForbiddenRoute,
  LoginRoute,
  RegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/forbidden",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/main",
        "/_auth/cards/add",
        "/_auth/cards/",
        "/_auth/users/",
        "/_auth/users/$userId/edit"
      ]
    },
    "/forbidden": {
      "filePath": "forbidden.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_auth/main": {
      "filePath": "_auth/main.tsx",
      "parent": "/_auth"
    },
    "/_auth/cards/add": {
      "filePath": "_auth/cards/add.tsx",
      "parent": "/_auth"
    },
    "/_auth/cards/": {
      "filePath": "_auth/cards/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$userId/edit": {
      "filePath": "_auth/users/$userId.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
